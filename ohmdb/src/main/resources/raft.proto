package ohmdb.replication;

option java_package = "ohmdb.replication";
option optimize_for = SPEED;

message RaftWireMessage {
  // envelope.

  optional int64       message_id = 1;
  optional int64       sender_id = 2;
  // implied and may not be needed to filled in.
  optional int64       receiver_id = 3;
  optional string      quorum_id = 4;
  // Is this a reply message?
  optional bool        in_reply = 5;

  // The struct and the field name must match for reflection reasons.
  optional RequestVote          RequestVote = 100;
  optional RequestVoteReply     RequestVoteReply = 101;
  optional AppendEntries        AppendEntries = 102;
  optional AppendEntriesReply   AppendEntriesReply = 103;

  extensions 1000 to max;
}

message LogEntry {
  optional int64 term = 1;
  optional int64 index = 2;
  optional bytes data = 3;
}

message RequestVote {
  optional int64 term = 1;
  optional int64 candidate_id = 2;

  optional int64 last_log_index = 3;
  optional int64 last_log_term = 4;
}

message RequestVoteReply {
  // currentTerm, for candidate to update itself
  optional int64 term = 1;
  // true means candidate received vote
  optional bool  vote_granted = 2;
}

message AppendEntries {
  optional int64      term = 1;
  optional int64      leader_id = 2;
  optional int64      prev_log_index = 3;
  optional int64      prev_log_term = 4;
  repeated LogEntry   entries = 5;
  optional int64      commit_index = 6;
}

message AppendEntriesReply {
  optional int64 term = 1;
  optional bool  success = 2;

  optional int64 my_last_log_entry = 3;
}